name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: windows-latest  # Windows Runner

    env:
      REGISTRY: docker.io
      IMAGE_NAME: expense-tracker
      USERNAME: olegmukhin

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

 # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t expense-tracker:latest .
        docker tag ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:latest ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    # Push the Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:latest

    # Update Kubernetes manifests
    - name: Update Kubernetes manifests
      run: |
        (Get-Content deployment.yaml) -replace "image:.*", "image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" | Set-Content k8s/deployment.yaml

    # Commit updated manifests to the repository
    - name: Commit and push changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Update Kubernetes manifests with new image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        branch: main

    # Trigger Argo CD to deploy the changes
    - name: Trigger Argo CD sync
      shell: pwsh
      run: |
        Invoke-RestMethod -Uri "https://argo-cd-server/api/v1/applications/<application-name>/sync" `
          -Method POST `
          -Headers @{ Authorization = "Bearer ${{ secrets.ARGOCD_AUTH_TOKEN }}" }
