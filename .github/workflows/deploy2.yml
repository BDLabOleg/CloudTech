name: Deploy and Test Kubernetes on Windows

on:
  push:
    branches:
      - main

jobs:
  deploy-k8s:
    runs-on: windows-latest  # Используем Windows Runner

    env:
      REGISTRY: docker.io
      IMAGE_NAME: expense-tracker
      NAMESPACE: default  # Namespace Kubernetes
      DEPLOYMENT_NAME: expense-tracker

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Установка kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.27.0/bin/windows/amd64/kubectl.exe"
          mkdir -Force $Env:USERPROFILE\kubectl
          Move-Item -Path kubectl.exe -Destination $Env:USERPROFILE\kubectl
          [Environment]::SetEnvironmentVariable("PATH", "$Env:USERPROFILE\kubectl;$Env:PATH", [EnvironmentVariableTarget]::Process)
          kubectl version --client

      # Настройка доступа к кластеру через KUBECONFIG
      - name: Set up KUBECONFIG
        run: |
          New-Item -ItemType Directory -Force -Path $Env:USERPROFILE\.kube
          Set-Content -Path $Env:USERPROFILE\.kube\config -Value "${{ secrets.KUBECONFIG }}"

      # Развертывание приложения в Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl config set-context --current --namespace=${{ env.NAMESPACE }}
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}

      # Тестирование доступности приложения
      - name: Test if app is running
        run: |
          $POD_NAME = kubectl get pods -l app=${{ env.DEPLOYMENT_NAME }} -o jsonpath="{.items[0].metadata.name}"
          Write-Host "Testing pod: $POD_NAME"
          kubectl logs $POD_NAME
          curl.exe -m 10 http://localhost:3000 || Write-Host "Service not accessible"

      # Очистка ресурсов
      - name: Clean up Kubernetes resources
        if: always()
        run: |
          kubectl delete -f k8s/deployment.yaml
          kubectl delete -f k8s/service.yaml
