name: Build and Deploy to Minikube on Windows

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: windows-latest  # Windows Runner

    env:
      REGISTRY: docker.io
      IMAGE_NAME: expense-tracker
      USERNAME: olegmukhin

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t $env:REGISTRY/$env:IMAGE_NAME:latest .

    # Push the Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push $env:REGISTRY/$env:IMAGE_NAME:latest

    # Start Minikube
    - name: Start Minikube
      run: |
        minikube start --driver=docker

    # Configure Docker to use Minikube's internal Docker registry
    - name: Use Minikube Docker
      run: |
        & minikube -p minikube docker-env | Invoke-Expression

    # Load Docker image into Minikube
    - name: Load Docker image to Minikube
      run: |
        minikube image load $env:REGISTRY/$env:IMAGE_NAME:latest

    # List running Docker containers
    - name: Check running Docker containers
      run: |
        docker ps  # Проверяет, что Minikube использует Docker и отображает запущенные контейнеры

    # Update Kubernetes manifests with new image
    - name: Update Kubernetes manifests
      run: |
        (Get-Content deployment.yaml) -replace "image:.*", "image: $env:REGISTRY/$env:IMAGE_NAME:latest" | Set-Content deployment.yaml

    # Apply Kubernetes manifests
    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f deployment.yaml

    # Wait for the app to be ready
    - name: Wait for deployment
      run: |
        kubectl rollout status deployment/expense-tracker

    # Test the app in Minikube
    - name: Test the app in Minikube
      run: |
        minikube service expense-tracker --url
